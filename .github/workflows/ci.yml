name: CI tests

on:
  pull_request:
  push:
    branches:
    - Live

jobs:

  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'
        cache-dependency-path: |
          requirements*.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --all-extras

    - name: Run tests
      run: |
        poetry run pytest

    - name: Build docs
      run : |
        poetry run mkdocs build --strict

    - name: Lock dependencies and prepare deployment
      run: |
        # Azure expects to find the app, requirements and any static files at the top-level
        # so we need to do some tweaks here to massage the repo into that format
        poetry export -f requirements.txt -o requirements.txt --without-hashes
        # add self-install to end of requirements file
        sh -c 'echo "." >> requirements.txt'
        # copy app file so it is available as app:app
        mv src/PASCal/app.py src/PASCal/static src/PASCal/templates .
        ls -al

    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v3
      with:
        name: PASCal - test
        path: |
          .
          !venv/
          !site/
          !docs/
          !tests/
    
    - name: Upload docs artifact 
      uses: actions/upload-artifact@v3
      with:
        name: github-pages
        path: |
          ./site/

  deploy:
    if: ${{github.repository == 'MJCliffe/PASCal' && github.event_name == 'push' }}
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: tests
    environment:
      name: "Test deployment"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: PASCal - test
          path: .

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_TEST_WEBAPP_PUBLISH_PROFILE }}

  deploy_docs:

    if: ${{github.repository == 'MJCliffe/PASCal' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    needs: tests
    environment:
      name: "Latest documentation"
      url: https://mjcliffe.github.io/PASCal
    
    steps:
    - name: Deploy docs
      uses: actions/deploy-pages@v2
