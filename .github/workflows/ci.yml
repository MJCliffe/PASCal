name: CI tests

on:
  pull_request:
  push:
    branches:
    - Live

# Cancel running workflows when additional changes are pushed
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-a-fallback-value
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true


    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          requirements*.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --all-extras

    - name: Run linting
      if: matrix.python-version == 3.9
      run: |
        poetry run pre-commit run --all-files

    - name: Run tests
      run: |
        poetry run pytest

    - name: Build docs
      if: matrix.python-version == 3.9
      run : |
        poetry run mkdocs build

    - name: Lock dependencies and prepare deployment
      if: matrix.python-version == 3.9
      run: |
        # Azure expects to find the app, requirements and any static files at the top-level
        # so we need to do some tweaks here to massage the repo into that format
        poetry export -f requirements.txt -o requirements.txt --without-hashes
        # add self-install to end of requirements file
        sh -c 'echo "." >> requirements.txt'
        # copy app file so it is available as app:app
        mv src/PASCal/app.py src/PASCal/static src/PASCal/templates .
        ls -al

    - name: Upload artifact for deployment
      if: matrix.python-version == 3.9
      uses: actions/upload-artifact@v3
      with:
        name: PASCal - test
        path: |
          .
          !venv/
          !site/
          !docs/
          !tests/

    - name: Fix permissions # followng https://github.com/actions/upload-pages-artifact?tab=readme-ov-file#file-permissions
      if: matrix.python-version == 3.9
      run: |
        chmod -c -R +rX "site/" | while read line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
        done

    - name: Upload docs artifact
      if: matrix.python-version == 3.9
      uses: actions/upload-pages-artifact@v2
      with:
        path: site

  deploy:
    if: ${{github.repository == 'MJCliffe/PASCal' && github.event_name == 'push' }}
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: tests
    environment:
      name: "Test deployment"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: PASCal - test
          path: .

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_TEST_WEBAPP_PUBLISH_PROFILE }}

  deploy_docs:

    if: ${{github.repository == 'MJCliffe/PASCal' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    needs: tests
    environment:
      name: "Latest documentation"
      url: https://mjcliffe.github.io/PASCal

    steps:
    - name: Deploy docs
      uses: actions/deploy-pages@v2
